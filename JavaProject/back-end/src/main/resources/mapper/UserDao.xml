<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ender.miniapp.dao.UserDao">

    <resultMap type="top.ender.miniapp.entity.User" id="UserMap">
        <result property="uId" column="u_id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="classesId" column="classes_id" jdbcType="INTEGER"/>
        <result property="lastEditTime" column="last_edit_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="userClasses" type="top.ender.miniapp.entity.User">
        <result property="uId" column="u_id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="classesId" column="classes_id" jdbcType="INTEGER"/>
        <result property="lastEditTime" column="last_edit_time" jdbcType="TIMESTAMP"/>
        <association property="classes" javaType="top.ender.miniapp.entity.Classes" select="top.ender.miniapp.dao.ClassesDao.queryById" column="classes_id"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select u_id,
               username,
               password,
               classes_id,
               last_edit_time,
               user_status
        from miniapp.user
        where u_id = #{uId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="userClasses">
        select u_id,
               username,
               classes_id,
               last_edit_time,
               user_status
        from miniapp.user
        where user_status != 3
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="userClasses">
        select
        u_id, username, classes_id, last_edit_time, user_status
        from miniapp.user
        <where>
            <if test="uId != null and uId != ''">
                and u_id = #{uId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="classesId != null">
                and classes_id = #{classesId}
            </if>
            <if test="lastEditTime != null">
                and last_edit_time = #{lastEditTime}
            </if>
            <if test="userStatus != null">
                and user_status = #{userStatus}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="uId" useGeneratedKeys="true">
        insert into miniapp.user(u_id,username, password, classes_id, last_edit_time, user_status)
        values (#{uId},#{username}, #{password}, #{classesId}, #{lastEditTime}, #{userStatus})
    </insert>

    <insert id="insertBatch" keyProperty="uId" useGeneratedKeys="true">
        insert into miniapp.user(u_id,username, password, classes_id, last_edit_time, user_status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{uId},#{entity.username}, #{entity.password}, #{entity.classesId}, #{entity.lastEditTime}, #{userStatus})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="uId" useGeneratedKeys="true">
        insert into miniapp.user(username, password, classes_id, last_edit_time, user_status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.classesId}, #{entity.lastEditTime}, #{userStatus})
        </foreach>
        on duplicate key update
        username = values(username) , password = values(password) , classes_id = values(classes_id) , last_edit_time =
        values(last_edit_time), user_status = values(user_status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update miniapp.user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="classesId != null">
                classes_id = #{classesId},
            </if>
            <if test="lastEditTime != null">
                last_edit_time = #{lastEditTime},
            </if>
            <if test="userStatus != null">
                user_status = #{userStatus},
            </if>
        </set>
        where u_id = #{uId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from miniapp.user
        where u_id = #{uId}
    </delete>

</mapper>


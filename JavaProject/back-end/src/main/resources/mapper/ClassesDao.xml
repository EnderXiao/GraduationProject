<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ender.miniapp.dao.ClassesDao">

    <resultMap type="top.ender.miniapp.entity.Classes" id="ClassesMap">
        <result property="classesId" column="classes_id" jdbcType="INTEGER"/>
        <result property="majorId" column="major_id" jdbcType="INTEGER"/>
        <result property="schoolYear" column="school_year" jdbcType="INTEGER"/>
        <result property="classesNo" column="classes_no" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="classMajorCollege" type="top.ender.miniapp.entity.Classes">
        <result property="classesId" column="classes_id" jdbcType="INTEGER"/>
        <result property="majorId" column="major_id" jdbcType="INTEGER"/>
        <result property="schoolYear" column="school_year" jdbcType="INTEGER"/>
        <result property="classesNo" column="classes_no" jdbcType="INTEGER"/>
        <association property="major" javaType="top.ender.miniapp.entity.Major">
            <id property="majorId" column="major_id"/>
            <result property="majorName" column="major_name"/>
            <result property="majorStudentNum" column="major_student_num"/>
            <result property="collegeId" column="college_id"/>
            <association property="college" javaType="top.ender.miniapp.entity.College">
                <id property="collegeId" column="college_id"/>
                <result property="collegeName" column="college_name"/>
                <result property="collegeStudentNum" column="college_student_num"/>
            </association>
        </association>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="classMajorCollege">
        select cs.classes_id,
               cs.classes_no,
               cs.school_year,
               cs.major_id,
               m.major_id,
               m.major_name,
               m.major_student_num,
               m.college_id,
               c.college_id,
               c.college_name,
               c.college_student_num
        from classes cs
        left join major m on cs.major_id = m.major_id
        left join college c on m.college_id = c.college_id
        where classes_id = #{classesId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ClassesMap">
        select classes_id,
               major_id,
               school_year,
               classes_no
        from miniapp.classes
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="classMajorCollege">
        select cs.classes_id,
        cs.classes_no,
        cs.school_year,
        cs.major_id,
        m.major_id,
        m.major_name,
        m.major_student_num,
        m.college_id,
        c.college_id,
        c.college_name,
        c.college_student_num
        from miniapp.classes cs
        left join major m on cs.major_id = m.major_id
        left join college c on m.college_id = c.college_id
        <where>
            <if test="classesId != null">
                and classes_id = #{classesId}
            </if>
            <if test="majorId != null">
                and major_id = #{majorId}
            </if>
            <if test="schoolYear != null">
                and school_year = #{schoolYear}
            </if>
            <if test="classesNo != null">
                and classes_no = #{classesName}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="classesId" useGeneratedKeys="true">
        insert into miniapp.classes(major_id, school_year, classes_no)
        values (#{majorId}, #{schoolYear}, #{classesName})
    </insert>

    <insert id="insertBatch" keyProperty="classesId" useGeneratedKeys="true">
        insert into miniapp.classes(major_id, school_year, classes_no)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.majorId}, #{entity.schoolYear}, #{entity.classesName})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="classesId" useGeneratedKeys="true">
        insert into miniapp.classes(major_id, school_year, classes_no)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.majorId}, #{entity.schoolYear}, #{entity.classesName})
        </foreach>
        on duplicate key update
        major_id = values(major_id) , school_year = values(school_year) , classes_no = values(classes_no)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update miniapp.classes
        <set>
            <if test="majorId != null">
                major_id = #{majorId},
            </if>
            <if test="schoolYear != null">
                school_year = #{schoolYear},
            </if>
            <if test="classesName != null">
                classes_name = #{classesName},
            </if>
        </set>
        where classes_id = #{classesId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from miniapp.classes
        where classes_id = #{classesId}
    </delete>

</mapper>


<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.ender.miniapp.dao.CollegeDao">

    <resultMap type="top.ender.miniapp.entity.College" id="CollegeMap">
        <result property="collegeId" column="college_id" jdbcType="INTEGER"/>
        <result property="collegeName" column="college_name" jdbcType="VARCHAR"/>
        <result property="collegeStudentNum" column="college_student_num" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CollegeMap">
        select college_id,
               college_name,
               college_student_num
        from miniapp.college
        where college_id = #{collegeId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CollegeMap">
        select college_id,
               college_name,
               college_student_num
        from miniapp.college
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CollegeMap">
        select
        college_id, college_name, college_student_num
        from miniapp.college
        <where>
            <if test="collegeId != null">
                and college_id = #{collegeId}
            </if>
            <if test="collegeName != null and collegeName != ''">
                and college_name = #{collegeName}
            </if>
            <if test="collegeStudentNum != null">
                and college_student_num = #{collegeStudentNum}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="collegeId" useGeneratedKeys="true">
        insert into miniapp.college(college_name, college_student_num)
        values (#{collegeName}, #{collegeStudentNum})
    </insert>

    <insert id="insertBatch" keyProperty="collegeId" useGeneratedKeys="true">
        insert into miniapp.college(college_name, college_student_num)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.collegeName}, #{entity.collegeStudentNum})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="collegeId" useGeneratedKeys="true">
        insert into miniapp.college(college_name, college_student_num)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.collegeName}, #{entity.collegeStudentNum})
        </foreach>
        on duplicate key update
        college_name = values(college_name) , college_student_num = values(college_student_num)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update miniapp.college
        <set>
            <if test="collegeName != null and collegeName != ''">
                college_name = #{collegeName},
            </if>
            <if test="collegeStudentNum != null">
                college_student_num = #{collegeStudentNum},
            </if>
        </set>
        where college_id = #{collegeId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from miniapp.college
        where college_id = #{collegeId}
    </delete>

</mapper>

